name: spin

on:
  workflow_dispatch:
    inputs:
      branch:
        type: string
        required: true
      response_url:
        type: string
        required: true

permissions:
  contents: read
  actions: write

concurrency:
  group: spin-${{ github.ref || inputs.branch }}
  cancel-in-progress: false

jobs:
  deploy:
    runs-on: ubuntu-latest

    # expose secrets as env so we can use them in `if:` expressions
    env:
      CF_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
      CF_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
      RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
      RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}

    steps:
      - name: Checkout branch
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.branch }}

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # ---------- FRONTEND ----------
      - name: Build frontend
        working-directory: frontend
        run: |
          npm ci
          npm run build
          # Vite output -> dist; if CRA, change to frontend/build
          echo "DIST_DIR=frontend/dist" >> $GITHUB_ENV

      - name: Publish to Cloudflare Pages
        id: pages
        uses: cloudflare/pages-action@v1
        continue-on-error: true
        with:
          apiToken: ${{ env.CF_API_TOKEN }}
          accountId: ${{ env.CF_ACCOUNT_ID }}
          projectName: billingapp            # <-- your Pages project name
          directory: ${{ env.DIST_DIR }}
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}

      - name: Capture FE URL (if any)
        run: echo "FE_URL=${{ steps.pages.outputs.url }}" >> $GITHUB_ENV

      # ---------- BACKEND (Render example) ----------
      - name: Deploy backend to Render
        if: ${{ env.RENDER_API_KEY != '' && env.RENDER_SERVICE_ID != '' }}
        env:
          RENDER_API_KEY: ${{ env.RENDER_API_KEY }}
          RENDER_SERVICE_ID: ${{ env.RENDER_SERVICE_ID }}
        run: |
          curl -s -X POST \
            -H "Authorization: Bearer $RENDER_API_KEY" \
            -H "Content-Type: application/json" \
            https://api.render.com/v1/services/$RENDER_SERVICE_ID/deploys
          echo "BE_URL=https://$RENDER_SERVICE_ID.onrender.com" >> $GITHUB_ENV
        continue-on-error: true

      - name: Default BE URL if not set
        run: |
          : "${BE_URL:=}"
          echo "BE_URL=${BE_URL}" >> $GITHUB_ENV

      # ---------- SLACK NOTIFY ----------
      - name: Notify Slack
        if: always()
        env:
          SLACK_URL: ${{ inputs.response_url }}
          STATUS: ${{ job.status }}
          BRANCH: ${{ inputs.branch }}
          FE_URL: ${{ env.FE_URL }}
          BE_URL: ${{ env.BE_URL }}
        run: |
          FE_LINE=${FE_URL:+Frontend: $FE_URL\\n}
          BE_LINE=${BE_URL:+Backend: $BE_URL\\n}
          TEXT="*$BRANCH* status: *$STATUS*\\n${FE_LINE}${BE_LINE}"
          curl -s -X POST -H "Content-type: application/json" "$SLACK_URL" \
            -d "$(printf '{"text":"%s"}' "$TEXT")"
